#!/bin/sh
set -e

echo "search lan" > /etc/resolv.conf
echo "nameserver 223.5.5.5" >> /etc/resolv.conf
echo "nameserver 119.29.29.29" >> /etc/resolv.conf
echo "nameserver 100.100.100.100" >> /etc/resolv.conf


if [ ! -f /tmp/tailscale ]; then
    arch=$(uname -m)
    if [ "$arch" = "i386" ]; then
        arch=386
    elif [ "$arch" = "x86_64" ]; then
        arch=amd64
    elif [ "$arch" = "armv7l" ]; then
        arch=arm
    elif [ "$arch" = "aarch64" ]; then
        arch=arm64
    elif [ "$arch" = "armv8l" ]; then
        arch=arm64
    elif [ "$arch" = "geode" ]; then
        arch=geode
    elif [ "$arch" = "mips" ]; then
        endianness=$(echo -n I | hexdump -o | awk '{ print (substr($2,6,1)=="1") ? "le" : "" }')
    elif [ "$arch" = "riscv64" ]; then
        arch=riscv64
    else
        echo "DOWNLOAD: ----------------------------------------------------"
        echo "当前机器的架构是${arch}${endianness}, 脚本不兼容此架构"
        echo "请给作者提issue以便作者及时修改脚本:"
        echo "https://github.com/waltermanpro/tailscale-openwrt/issues"
        echo "--------------------------------------------------------------"
        exit 1
    fi

    latest_version="not_available"
    version_timeout=20
    version_url="https://github.com/waltermanpro/tailscale-openwrt/releases/latest"
    version_proxys="https://ghproxy.cc
    https://git.xfj0.cn
    https://cors.isteed.cc
    https://940740.xyz
    https://hub.gitmirror.com
    https://gh.con.sh
    https://mirror.ghproxy.com
    https://slink.ltd
    https://dl.ghpig.top
    https://gh.ddlc.top
    https://gh.h233.eu.org"

    range="1
    2
    3"

    for attempt in $range; do
        # echo "DOWNLOAD: --------"
        # echo "获取版本号，总第 $attempt 次"
        # echo "------------------"
        for version_proxy in $version_proxys; do
            version_proxy_url="$version_proxy/$version_url"
            get_version=$(wget -T $version_timeout -qO- "$version_proxy_url" | grep 已从上游同步 | head -1 | cut -d'%' -f 2)
            # echo "获取版本号, 网址: $version_proxy_url  结果: $get_version"
            if [ "$get_version" != "" ]; then
               echo "DOWNLOAD: -----------------------------------"
                echo "通过代理 $version_proxy 获取版本号：$get_version"
               echo "---------------------------------------------"
                latest_version=$get_version
                break  # 如果成功获取到版本号，跳出循环
            else
                echo "DOWNLOAD: ----------------------------------------------------"
                echo "通过代理 $version_proxy 获取版本号为空，尝试下一个代理..."
                echo "--------------------------------------------------------------"
            fi
        done
        if [ "$get_version" != "" ]; then
            break
        fi
    done

    # 如果最终还是无法获取到最新版本号，使用默认版本号
    if [ "$latest_version" = "not_available" ]; then
        latest_version="1.72.0"
        echo "DOWNLOAD: --------------------------------"
        echo "获取版本号失败，使用内置版本号：$latest_version"
        echo "------------------------------------------"
    fi

    version="${latest_version}_${arch}${endianness}"
    # echo "正在下载 tailscale_${version}.tgz ..."
    
    zip_url="https://github.com/waltermanpro/tailscale-openwrt/releases/download/${latest_version}/tailscale_${version}.tgz"

    echo -e "tailscale_${version}/tailscale" > /tmp/tailscale_${version}_files.txt
    echo -e "tailscale_${version}/tailscaled" >> /tmp/tailscale_${version}_files.txt
    download_success=false
    timeout_seconds=30
    for attempt in $range; do
        # echo "DOWNLOAD: ------------"
        # echo "下载zip并解压，总第 $attempt 次"
        # echo "----------------------"
        for zip_proxy in $version_proxys; do
            zip_proxy_url="$zip_proxy/$zip_url"
            # 使用 timeout 命令设定超时时间
            if wget -T $version_timeout -c -qO- $zip_proxy_url | tar xzvf - -C /tmp -T /tmp/tailscale_${version}_files.txt > /dev/null 2>&1; then
                download_success=true
                echo "DOWNLOAD: ---------------------------------"
                echo "通过代理 $zip_proxy 下载并解压成功!"
                echo "-------------------------------------------"
                break
            else
                echo "DOWNLOAD: --------------------------------------"
                echo "通过代理 $zip_proxy 下载失败，尝试下一个代理..."
                echo "------------------------------------------------"
            fi
        done
        if [ "$download_success" = true ]; then
            break
        fi
    done

    if [ "$download_success" != true ]; then
        echo "DOWNLOAD: ----------------------------------------"
        echo "所有代理下载均失败，请检查网络或稍后再试。"
        echo "--------------------------------------------------"
        exit 1
    fi

    mv /tmp/tailscale_$version/tailscale /tmp
    mv /tmp/tailscale_$version/tailscaled /tmp
    rm -rf /tmp/tailscale_${version}*
fi
